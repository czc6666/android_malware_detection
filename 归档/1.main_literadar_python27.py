# coding=utf-8

"""
czc_dataset_3：1400个apk
生成了1398个三方库文件
总运行时间: 644.34 秒

这里修改了filter_dex.py，将错误apk统计并直接删除，会生成一个无效apk列表文件：
/home/czc/code/Android_Malware_Detection/code/android_malware_detection/无效apk文件列表.txt

然后在2.main_literadar_python3.py对标签数据集进行清理
"""
import os
from LiteRadar.filter_dex import filter_dex
from static import get_apk_path
from static import total_process_single_core
from static import get_dataset_name
import time

# 收集开始时间
start_time = time.time()



program_root = os.getcwd()
# 添加apktool的环境变量
os.environ["PATH"] = program_root + '/tools/apktool/' + ":" + os.environ["PATH"]
# 添加jadx的环境变量
os.environ["PATH"] = program_root + '/tools/jadx/build/jadx/bin/' + ":" + os.environ["PATH"]


# 对原始APK文件进行预处理，包括反编译、三方库过滤等,在python2.7下运行
def literadar(dataset):
    # 1. 获取数据集的配置
    apk_path, manifest_path, dex_path, java_path, _3rd_path, permission_path, token_path, filelist_train, filelist_test, filelist_train_filter, filelist_test_filter = get_apk_path(dataset)

    # 2.使用LiteRadar获取每个apk文件的三方库,在python2.7下运行
    filter_dex(apk_path, _3rd_path, total_process_single_core)

    # 3. 统计生成了多少个三方库文件
    print("生成了{}个三方库文件".format(len(os.listdir(_3rd_path))))


def main():
    dataset = get_dataset_name()
    literadar(dataset)

    # 收集结束时间
    end_time = time.time()
    print("1.py的运行时间: {:.2f} 秒".format(end_time - start_time))


if __name__ == '__main__':
    main()
