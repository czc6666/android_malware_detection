# coding=utf-8

"""
202410272329：数据集：czc_dataset_VS_Drebin_AndroZoo 6000个apk，运行时间: 169.60 秒
Trainging Finished
TP: 799, FP: 0, TN: 3996, FN: 0
accuacy: 1.0, precision: 1.0, recall: 1.0, F1: 1.0
TP: 165, FP: 15, TN: 989, FN: 31
accuacy: 0.9616666666666667, precision: 0.9166666666666666, recall: 0.8418367346938775, F1: 0.8776595744680852
总运行时间: 169.60 秒

202410291615：数据集：czc_dataset_4 6000个apk，运行时间: 196.92 秒
TP: 784, FP: 0, TN: 4013, FN: 0
accuacy: 1.0, precision: 1.0, recall: 1.0, F1: 1.0
TP: 170, FP: 2, TN: 985, FN: 41
accuacy: 0.9641068447412354, precision: 0.9883720930232558, recall: 0.8056872037914692, F1: 0.887728459530026
总运行时间: 196.92 秒
"""
import os
from static import get_apk_path, get_lsi_config, get_xgboost_config, get_cscg_config, get_graph_config
from static import get_dataset_name
from lsi.lsi import lsi_train, lsi_test
from xgb_classification.combine_lsi_permission import combine_lsi_permission
from xgb_classification.xgboost_clf import train_xgb_model, test_xgb_model
import time

# 收集开始时间
start_time = time.time()

program_root = os.getcwd()
# 添加apktool的环境变量
os.environ["PATH"] = program_root + '/tools/apktool/' + ":" + os.environ["PATH"]
# 添加jadx的环境变量
os.environ["PATH"] = program_root + '/tools/jadx/build/jadx/bin/' + ":" + os.environ["PATH"]


# 在python3.6下运行
# 仅使用语义模型和permission特征进行模型训练
def lsi_model_train(dataset):
    # 8.获取lsi模型训练所需全部文件的路径
    train_file, test_file, TFIDF_dict_path, dict_corpus, TFIDF_model_path, TFIDF_corpus_path, LSI_model_path, LSI_corpus_path, LSI_corpus_path_test, token_root, apktool_root_path, no_below, no_above = get_lsi_config(dataset)

    # 9.进行LSI模型的训练，内部包含TFIDF模型的训练，并生成训练特征文件
    lsi_train(dataset, train_file, TFIDF_dict_path, dict_corpus, TFIDF_model_path, TFIDF_corpus_path, LSI_model_path, LSI_corpus_path, token_root, no_below=no_below, no_above=no_above)

    # 10.生成测试集的特征向量
    lsi_test(dataset, test_file, TFIDF_dict_path, TFIDF_model_path, LSI_model_path, LSI_corpus_path_test, token_root)

    # 11.获取数据集与模型的相关信息
    LSI_Permission_file, LSI_Permission_file_test, lsi_per_xgboost_model, LSI_corpus_path, LSI_corpus_path_test, permission_dir_path = get_xgboost_config(dataset)

    # 12.生成lsi和permission拼接后训练集的特征
    combine_lsi_permission(dataset, LSI_corpus_path, permission_dir_path, LSI_Permission_file)

    # 13.生成测试集的lsi与permission拼接特征
    combine_lsi_permission(dataset, LSI_corpus_path_test, permission_dir_path, LSI_Permission_file_test)

    # 14.训练XGBoost模型进行分类
    train_xgb_model(LSI_Permission_file, lsi_per_xgboost_model)

    # 15.测试XGBoost模型的效果
    test_xgb_model(LSI_Permission_file_test, lsi_per_xgboost_model)


def main():
    dataset = get_dataset_name()
    lsi_model_train(dataset)

    # 收集结束时间
    end_time = time.time()
    print("3.py的运行时间: {:.2f} 秒".format(end_time - start_time))

if __name__ == '__main__':
    main()


    