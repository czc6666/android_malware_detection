import os
from tqdm import tqdm

def clean_labels(apk_dir, label_files, output_files):
    """
    清理标签文件，只保留实际存在的APK文件的标签
    
    参数:
    apk_dir: APK文件所在目录
    label_files: 原始标签文件路径列表
    output_files: 新标签文件路径列表
    """
    # 获取实际存在的APK文件列表
    print("正在读取APK文件列表...")
    existing_apks = set(f for f in os.listdir(apk_dir) if f.endswith('.apk'))
    print(f"在目录 {apk_dir} 中找到 {len(existing_apks)} 个APK文件")

    # 处理每个标签文件
    for input_file, output_file in zip(label_files, output_files):
        if not os.path.exists(input_file):
            print(f"警告: 标签文件 {input_file} 不存在")
            continue

        # 首先计算文件行数
        with open(input_file, 'r') as f:
            total_lines = sum(1 for _ in f)

        # 读取并处理标签文件
        valid_labels = []
        removed_count = 0
        
        print(f"\n处理文件: {input_file}")
        with open(input_file, 'r') as f:
            # 添加tqdm进度条
            for line in tqdm(f, total=total_lines, desc="处理进度"):
                apk_name = line.split()[0]  # 假设格式为: "apk_name label"
                if apk_name in existing_apks:
                    valid_labels.append(line.strip())
                else:
                    removed_count += 1

        # 写入新文件
        print(f"正在保存到新文件: {output_file}")
        with open(output_file, 'w') as f:
            for label in tqdm(valid_labels, desc="保存进度"):
                f.write(label + '\n')

        print(f"\n文件 {input_file} 处理完成:")
        print(f"- 原始标签数量: {total_lines}")
        print(f"- 保留标签数量: {len(valid_labels)}")
        print(f"- 删除标签数量: {removed_count}")
        print(f"- 新文件已保存至: {output_file}")

if __name__ == "__main__":
    try:
        # 配置路径
        apk_directory = '/home/czc/code/Android_Malware_Detection/dataset/czc_dataset_6'
        
        # 检查APK目录是否存在
        if not os.path.exists(apk_directory):
            raise FileNotFoundError(f"APK目录不存在: {apk_directory}")
        
        # 输入原始标签文件路径
        label_file1 = '/home/czc/code/Android_Malware_Detection/code/android_malware_detection/data/czc_dataset_5_test.filelist'
        label_file2 = '/home/czc/code/Android_Malware_Detection/code/android_malware_detection/data/czc_dataset_5_train.filelist'
        
        # 检查标签文件是否存在
        for f in [label_file1, label_file2]:
            if not os.path.exists(f):
                raise FileNotFoundError(f"标签文件不存在: {f}")
        
        # 输入新文件名
        output_file1 = '/home/czc/code/Android_Malware_Detection/code/android_malware_detection/data/czc_dataset_6_test.filelist'
        output_file2 = '/home/czc/code/Android_Malware_Detection/code/android_malware_detection/data/czc_dataset_6_train.filelist'
        
        # 检查输出目录是否存在
        for f in [output_file1, output_file2]:
            output_dir = os.path.dirname(f)
            if output_dir and not os.path.exists(output_dir):
                os.makedirs(output_dir)
                print(f"创建输出目录: {output_dir}")
        
        # 处理标签文件
        clean_labels(
            apk_directory,
            [label_file1, label_file2],
            [output_file1, output_file2]
        )
        
    except Exception as e:
        print(f"\n错误: {str(e)}")
    else:
        print("\n所有文件处理完成!")