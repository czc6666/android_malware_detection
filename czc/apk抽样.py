'''
如果要操作windows挂载进wsl的目录，不能用这个程序，要去windows里用ps脚本实现

# 设置源目录和目标目录
$sourceDirectory = "G:\数据集\VirusShareAPK数据集\VirusShare_Android_APK_2013"
$targetDirectory = "G:\数据集\数据集构建\VS_Drebin_AndroZoo"
$numberOfApks = 500  # 您想要复制的 APK 文件数量

# 确保源目录存在
if (-Not (Test-Path $sourceDirectory)) {
    Write-Host "源目录 $sourceDirectory 不存在。"
    exit
}

# 获取源目录中所有的 APK 文件
$apkFiles = Get-ChildItem -Path $sourceDirectory -Filter *.apk

# 确保目标目录存在，如果不存在则创建
if (-Not (Test-Path $targetDirectory)) {
    New-Item -Path $targetDirectory -ItemType Directory
}

# 检查是否有足够的 APK 文件
if ($apkFiles.Count -lt $numberOfApks) {
    Write-Host "源目录中只有 $($apkFiles.Count) 个 APK 文件，少于请求的 $numberOfApks 个。"
    exit
}

# 随机选择 n 个 APK 文件
$selectedApks = Get-Random -InputObject $apkFiles -Count $numberOfApks

# 复制选中的 APK 文件到目标目录
foreach ($apk in $selectedApks) {
    $sourcePath = $apk.FullName
    $targetPath = Join-Path -Path $targetDirectory -ChildPath $apk.Name
    Copy-Item -Path $sourcePath -Destination $targetPath
    Write-Host "已复制 $($apk.Name) 到 $targetDirectory"
}
'''

import os
import shutil
import random

def extract_random_apks(source_dir, target_dir, n):
    # 确保源目录存在
    if not os.path.exists(source_dir):
        print(f"源目录 {source_dir} 不存在。")
        return

    # 获取源目录中所有的 APK 文件
    apk_files = [file for file in os.listdir(source_dir) if file.endswith('.apk')]
    
    # 确保目标目录存在，如果不存在则创建
    if not os.path.exists(target_dir):
        os.makedirs(target_dir)
    
    # 检查是否有足够的 APK 文件
    if len(apk_files) < n:
        print(f"源目录中只有 {len(apk_files)} 个 APK 文件，少于请求的 {n} 个。")
        return
    
    # 随机选择 n 个 APK 文件
    selected_apks = random.sample(apk_files, n)
    
    # 复制选中的 APK 文件到目标目录
    for apk in selected_apks:
        shutil.copy(os.path.join(source_dir, apk), os.path.join(target_dir, apk))
        print(f"已复制 {apk} 到 {target_dir}")

# 使用示例
source_directory = '/home/czc/mnt/hc310/数据集/VirusShareAPK数据集/VirusShare_Android_APK_2013'
target_directory = '/home/czc/mnt/hc310/数据集/数据集构建/VS_Drebin_AndroZoo'
number_of_apks = 500  # 你想要复制的 APK 文件数量

extract_random_apks(source_directory, target_directory, number_of_apks)